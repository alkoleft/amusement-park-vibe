//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2025 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область ПрограммныйИнтерфейс

// Возвращает случайное имя.
//
// Параметры:
//  Пол - Строка - см. ЮТПодражатель_Люди.ПолЧеловека
//
// Возвращаемое значение:
//	Строка - Случайное имя, соответствующее указанному полу (или случайному, если пол не указан).
//
// Пример:
//  СлучайноеМужскоеИмя = ЮТПодражатель_Люди.Имя(ЮТПодражатель_Люди.ПолЧеловека().Мужской);
//  КакоетоИмя = ЮТПодражатель_Люди.Имя();
Функция Имя(Пол = Неопределено) Экспорт
	
	ПолЧеловека = ОпределитьПолЧеловекаИзПараметра(Пол);
	
	Если ПолЧеловека = ПолЧеловека().Мужской  Тогда
		Словарь = СловарьМужскиеИмена();
	ИначеЕсли ПолЧеловека = ПолЧеловека().Женский Тогда
		Словарь = СловарьЖенскиеИмена();
	КонецЕсли;
	
	Возврат ЮТПодражательСлужебный.СлучайноеЗначениеИзСловаря(Словарь);
	
КонецФункции

// Возвращает случайную фамилию.
//
// Параметры:
//  Пол - Строка - см. ЮТПодражатель_Люди.ПолЧеловека
//
// Возвращаемое значение:
//	Строка - Случайная фамилия, соответствующая указанному полу (или случайному, если пол не указан).
//
// Пример:
//  СлучайнаяЖенскаяФамилия = ЮТПодражатель_Люди.Фамилия(ЮТПодражатель_Люди.ПолЧеловека().Женский);
//  КакаятоФамилия = ЮТПодражатель_Люди.Фамилия();
Функция Фамилия(Пол = Неопределено) Экспорт
	
	ПолЧеловека = ОпределитьПолЧеловекаИзПараметра(Пол);
	
	Если ПолЧеловека = ПолЧеловека().Мужской  Тогда
		Словарь = СловарьМужскиеФамилии();
	ИначеЕсли ПолЧеловека = ПолЧеловека().Женский Тогда
		Словарь = СловарьЖенскиеФамилии();
	КонецЕсли;
	
	Возврат ЮТПодражательСлужебный.СлучайноеЗначениеИзСловаря(Словарь);
	
КонецФункции

// Возвращает случайное отчество.
//
// Параметры:
//  Пол - Строка - см. ЮТПодражатель_Люди.ПолЧеловека
//
// Возвращаемое значение:
//	Строка - Случайное отчество, соответствующее указанному полу (или случайному, если пол не указан).
//
// Пример:
//  СлучайноеМужскоеОтчество = ЮТПодражатель_Люди.Отчество(ЮТПодражатель_Люди.ПолЧеловека().Мужской);
//  КакоетоОтчество = ЮТПодражатель_Люди.Отчество();
Функция Отчество(Пол = Неопределено) Экспорт
	
	ПолЧеловека = ОпределитьПолЧеловекаИзПараметра(Пол);
	
	Если ПолЧеловека = ПолЧеловека().Мужской  Тогда
		Словарь = СловарьМужскиеОтчества();
	ИначеЕсли ПолЧеловека = ПолЧеловека().Женский Тогда
		Словарь = СловарьЖенскиеОтчества();
	КонецЕсли;
	
	Возврат ЮТПодражательСлужебный.СлучайноеЗначениеИзСловаря(Словарь);
	
КонецФункции

// Возвращает случайные фамилию, имя и отчество одной строкой.
//
// Параметры:
//  Пол - Строка - см. ЮТПодражатель_Люди.ПолЧеловека
//
// Возвращаемое значение:
//	Строка - Случайные фамилия, имя и отчество, соответствующие указанному полу (или случайному, если пол не указан), разделенные пробелами.
//
// Пример:
//  СлучайноеЖенскоеФИО = ЮТПодражатель_Люди.ФИО(ЮТПодражатель_Люди.ПолЧеловека().Женский);
//  КакоетоФИО = ЮТПодражатель_Люди.ФИО();
Функция ФИО(Пол = Неопределено) Экспорт
	
	ПолЧеловека = ОпределитьПолЧеловекаИзПараметра(Пол);
	
	Возврат СтрШаблон(
		"%1 %2 %3",
		Фамилия(ПолЧеловека),
		Имя(ПолЧеловека),
		Отчество(ПолЧеловека)
	);
	
КонецФункции

// Формирует случайный ИНН физического лица.
//
// Возвращаемое значение:
// 	Строка - Случайный валидный ИНН физического лица (12 цифр).
//
// Пример:
//  СлучайныйИНН = ЮТПодражатель_Люди.ИНН();
Функция ИНН() Экспорт
	Возврат ЮТТестовыеДанные.Подражатель().Компании().ИНН(, Истина);
КонецФункции

// Формирует случайный СНИЛС.
// Алгоритм формирования контрольного числа взят из открытых источников.
//
// Возвращаемое значение:
//  Строка - Случайный валидный СНИЛС в формате "XXX-XXX-XXX XX".
//
// Пример:
//  СлучайныйСНИЛС = ЮТПодражатель_Люди.СНИЛС();
Функция СНИЛС() Экспорт
	// https://ru.wikipedia.org/wiki/Контрольное_число
	ЧастиСнилс = Новый Массив();
	ФорматЧисла = "ЧЦ=3; ЧН=000; ЧВН=;";
	ЧастиСнилс.Добавить(Формат(ЮТТестовыеДанные.СлучайноеЧисло(100, 999), ФорматЧисла));
	ЧастиСнилс.Добавить(Формат(ЮТТестовыеДанные.СлучайноеЧисло(0, 999), ФорматЧисла));
	ЧастиСнилс.Добавить(Формат(ЮТТестовыеДанные.СлучайноеЧисло(0, 999), ФорматЧисла));
	
	ИтогоСтрокой = СтрСоединить(ЧастиСнилс, "");
	ДлинаОсновнойЧасти = СтрДлина(ИтогоСтрокой);
	Сумма = 0;
	Для Итератор = 0 По 8 Цикл
		Сумма = Сумма + (Число(Сред(ИтогоСтрокой, ДлинаОсновнойЧасти - Итератор, 1)) * (Итератор + 1));
	КонецЦикла;
	
	ОстатокОтДеления = Сумма % 101;
	КонтрольноеЧисло = ?(ОстатокОтДеления = 100, 0, ОстатокОтДеления);
	
	Возврат СтрШаблон(
		"%1-%2-%3 %4",
		ЧастиСнилс[0],
		ЧастиСнилс[1],
		ЧастиСнилс[2],
		Формат(КонтрольноеЧисло, "ЧЦ=2; ЧН=00; ЧВН=;")
	);
	
КонецФункции

#Область ФабрикаПеречислений

// Возвращает фиксированную структуру с вариантами биологического пола человека (не путать с гендером).
// 
// Возвращаемое значение:
//  ФиксированнаяСтруктура - Пол человека:
//    * Мужской - Строка - Строковое представление мужского пола ("Мужской")
//    * Женский - Строка - Строковое представление женского пола ("Женский")
//
// Пример:
//  Полы = ЮТПодражатель_Люди.ПолЧеловека();
//  Если МойПол = Полы.Мужской Тогда
//    // ...
//  КонецЕсли;
Функция ПолЧеловека() Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("Мужской", "Мужской");
	Результат.Вставить("Женский", "Женский");
	Возврат Новый ФиксированнаяСтруктура(Результат);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИмяРеализации()
	Возврат "Люди";
КонецФункции

Функция СловарьЖенскиеИмена()
	Возврат ЮТПодражательСлужебный.Словарь(ИмяРеализации(), "ЖенскиеИмена");
КонецФункции

Функция СловарьЖенскиеФамилии()
	Возврат ЮТПодражательСлужебный.Словарь(ИмяРеализации(), "ЖенскиеФамилии");
КонецФункции

Функция СловарьЖенскиеОтчества()
	Возврат ЮТПодражательСлужебный.Словарь(ИмяРеализации(), "ЖенскиеОтчества");
КонецФункции

Функция СловарьМужскиеИмена()
	Возврат ЮТПодражательСлужебный.Словарь(ИмяРеализации(), "МужскиеИмена");
КонецФункции

Функция СловарьМужскиеФамилии()
	Возврат ЮТПодражательСлужебный.Словарь(ИмяРеализации(), "МужскиеФамилии");
КонецФункции

Функция СловарьМужскиеОтчества()
	Возврат ЮТПодражательСлужебный.Словарь(ИмяРеализации(), "МужскиеОтчества");
КонецФункции

Функция ОпределитьПолЧеловекаИзПараметра(Пол)
	
	Если Пол <> Неопределено Тогда
		Если Не ПолЧеловека().Свойство(Пол) Тогда
			ВызватьИсключение СтрШаблон("Отсутствует реализация словаря для пола: %1", Пол);
		КонецЕсли;
		Возврат Пол;
	КонецЕсли;
	
	Варианты = ЮТКоллекции.ВыгрузитьЗначения(ПолЧеловека(), "Значение");
	
	Возврат ЮТТестовыеДанные.СлучайноеЗначениеИзСписка(Варианты);
	
КонецФункции

#КонецОбласти
