
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура СсылкаНаОбъектПриИзменении(Элемент)
	СсылкаНаОбъектПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СсылкаНаОбъектПриИзмененииНаСервере()

	Если ПроверитьЗаполнение() Тогда
		
		ДанныеОбъекта  = СсылкаНаОбъект.ПолучитьОбъект();
		
		МетаданныеОбъекта = ДанныеОбъекта.Метаданные();	
		ПолноеИмяМД =  МетаданныеОбъекта.ПолноеИмя();
		
		ЭтоДокумент = СтрНайти(ПолноеИмяМД, "Документ") <> 0;
		
		Если Не ЭтоДокумент Тогда
			Возврат;
		КонецЕсли;
		
		ДвиженияДокумента = ДанныеОбъекта.Движения; 
	
		Для Каждого МДДвижения Из МетаданныеОбъекта.Движения Цикл
			ДвиженияПоРегистру = ДвиженияДокумента[МДДвижения.Имя];
			ДвиженияПоРегистру.Прочитать();
			
			Если Не ДвиженияПоРегистру.Количество() Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтр = РегистрыДвиженийДокумента.Добавить();
			НоваяСтр.Движение = МДДвижения.Имя;
		КонецЦикла;
	Иначе
		РегистрыДвиженийДокумента.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьКодДляКонструктораОбъекта(Команда)
	Если ПроверитьЗаполнение() Тогда
		СформироватьКодДляКонструктораОбъектаНаСервере();	
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура СформироватьКодДляКонструктораОбъектаНаСервере()
	
	УдалитьДобавленныеЭлементы();
	
	Обработка = РеквизитФормыВЗначение("Объект");
	
	ОтобранныеДвижения = РегистрыДвиженийДокумента.Выгрузить(Новый Структура("Флажок", Истина));
	ОтобранныеДвижения = ОтобранныеДвижения.ВыгрузитьКолонку("Движение");
	ПодготовленныеДанные = Обработка.ПодготовленныеДанныеДляСозданияТестовогоОбъекта(СсылкаНаОбъект, ОтобранныеДвижения);	
	
	КодТестовогоМодуля.УстановитьТекст(ПодготовленныеДанные.КодТестовогоМодуля);
	КодМодуляМенеджераОбработки.УстановитьТекст(ПодготовленныеДанные.КодМодуляМенеджераОбработки);
	
	ДобавитьСтраницыДвижений(ПодготовленныеДанные.МакетыЭталонов);

КонецПроцедуры

&НаКлиенте
Процедура СформироватьКодДляКонструктораДвижений(Команда)
	Если ПроверитьЗаполнение() Тогда
		СформироватьКодДляКонструктораДвиженийНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СформироватьКодДляКонструктораДвиженийНаСервере()

	УдалитьДобавленныеЭлементы();
	
	Обработка = РеквизитФормыВЗначение("Объект");
	
	ОтобранныеДвижения = РегистрыДвиженийДокумента.Выгрузить(Новый Структура("Флажок", Истина));
	ОтобранныеДвижения = ОтобранныеДвижения.ВыгрузитьКолонку("Движение");
	ПодготовленныеДанные = Обработка.ПодготовленныеДанныеДляЗагрузкиДвижений(СсылкаНаОбъект, ОтобранныеДвижения);	
	
	КодТестовогоМодуля.УстановитьТекст(ПодготовленныеДанные.КодЗаполненияДвижений);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеФлажки(Команда)
	Для Каждого Стр Из РегистрыДвиженийДокумента  Цикл
		Стр.Флажок = Ложь;	
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВсеФлажки(Команда)
	Для Каждого Стр Из РегистрыДвиженийДокумента  Цикл
		Стр.Флажок = Истина;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	СсылкаНаОбъектПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьСтраницыДвижений(КоллекцияДвижений)

	Для Каждого Элемент Из КоллекцияДвижений Цикл
		Если МакетMarkDown Тогда
			ИмяЭлемента = Элемент.Ключ;
			РеквизитФормы = НовыйРеквизитФормы(ИмяЭлемента, "ТекстовыйДокумент");

			ИмяСтраницы = "Страница"+ ИмяЭлемента;
			НоваяСтраница = НоваяСтраница(ИмяСтраницы, ИмяЭлемента, "ДвиженияЭталоны");

			ДобавитьПолеТекстовогоЭлемента("ТекстовоеПоле" + ИмяЭлемента, ИмяЭлемента, НоваяСтраница);

			Текст = Обработки.ЮТРедакторМакетаСТестовымиДанными.КонвертироватьВТекстовыйДокумент(Элемент.Значение);
			ЭтаФорма[ИмяЭлемента].УстановитьТекст(Текст);
		Иначе
			ИмяЭлемента = Элемент.Ключ;
			РеквизитФормы = НовыйРеквизитФормы(ИмяЭлемента, "ТабличныйДокумент");

			ИмяСтраницы = "Страница"+ ИмяЭлемента;
			НоваяСтраница = НоваяСтраница(ИмяСтраницы, ИмяЭлемента, "ДвиженияЭталоны");

			ДобавитьТабличноеПоле("ТабличноеПоле" + ИмяЭлемента, ИмяЭлемента, НоваяСтраница);

			ЭтаФорма[ИмяЭлемента].Вывести(Элемент.Значение);			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция НовыйРеквизитФормы(ИмяРеквизита, Тип)
	
	Если РеквизитАналогичен(ИмяРеквизита, Тип) Тогда
		ЭтаФорма[ИмяРеквизита] = Новый (Тип);
		Возврат ЭтаФорма[ИмяРеквизита];
	КонецЕсли;
		
	ТипРеквизита = Новый ОписаниеТипов(Тип);
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	РеквизитФормы = Новый РеквизитФормы(ИмяРеквизита, ТипРеквизита, "",	ИмяРеквизита);
	ДобавляемыеРеквизиты.Добавить(РеквизитФормы);

 	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	ДобавленныеРеквизиты.Добавить(ИмяРеквизита);
	
	Возврат РеквизитФормы;

КонецФункции

&НаСервере
Функция НоваяСтраница(ИмяСтраницы, Заголовок, Родитель)
	
	СтраницыФормы = Элементы[Родитель];
	
	Если Элементы.Найти(ИмяСтраницы) <> Неопределено Тогда
		Возврат Элементы.Найти(ИмяСтраницы);
	КонецЕсли;
	
	СтраницаФормы = Элементы.Добавить(ИмяСтраницы, Тип("ГруппаФормы"), СтраницыФормы);		
	СтраницаФормы.Вид = ВидГруппыФормы.Страница;
	СтраницаФормы.Заголовок = Заголовок;
	
	ДобавленныеЭлементы.Добавить(ИмяСтраницы);
	
	Возврат СтраницаФормы;

КонецФункции

&НаСервере
Процедура ДобавитьТабличноеПоле(ИмяЭлемента, ПутьКДанным, РодительЭлемента)
	
	Если Элементы.Найти(ИмяЭлемента) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементФормы = Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), РодительЭлемента);
	
	ЭлементФормы.Заголовок = ИмяЭлемента;
	ЭлементФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементФормы.Вид = ВидПоляФормы.ПолеТабличногоДокумента;
	ЭлементФормы.ПутьКДанным = ПутьКДанным;
	
	ДобавленныеЭлементы.Добавить(ИмяЭлемента);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьПолеТекстовогоЭлемента(ИмяЭлемента, ПутьКДанным, РодительЭлемента)
	
	Если Элементы.Найти(ИмяЭлемента) <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементФормы = Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), РодительЭлемента);
	
	ЭлементФормы.Заголовок = ИмяЭлемента;
	ЭлементФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ЭлементФормы.Вид = ВидПоляФормы.ПолеТекстовогоДокумента;
	ЭлементФормы.ПутьКДанным = ПутьКДанным;
	
	ДобавленныеЭлементы.Добавить(ИмяЭлемента);
	
КонецПроцедуры

&НаСервере
Функция РеквизитАналогичен(ИмяРеквизита, Тип)
	Попытка
		Возврат Тип(ЭтаФорма[ИмяРеквизита]) = Тип(Тип);
	Исключение
		Возврат Ложь; 
	КонецПопытки;
КонецФункции

&НаСервере
Процедура УдалитьДобавленныеЭлементы()
	
	Для Каждого Элемент Из ДобавленныеЭлементы Цикл
		Если Элементы.Найти(Элемент.Значение) <> Неопределено Тогда
			Элементы.Удалить(Элементы[Элемент.Значение]);
		КонецЕсли;	
	КонецЦикла;
	
	ИзменитьРеквизиты(,ДобавленныеРеквизиты.ВыгрузитьЗначения());
	
	ДобавленныеЭлементы.Очистить();
	ДобавленныеРеквизиты.Очистить();
	
КонецПроцедуры

#КонецОбласти


